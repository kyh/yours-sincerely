{
  "id": "d5abe8e5-a3ac-4530-9c29-057dbb3f16a1",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.Account": {
      "name": "Account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refreshToken": {
          "name": "refreshToken",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "accessToken": {
          "name": "accessToken",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Account_provider_providerAccountId_key": {
          "name": "Account_provider_providerAccountId_key",
          "columns": [
            {
              "expression": "provider",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "providerAccountId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Account_userId_idx": {
          "name": "Account_userId_idx",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Account_userId_fkey": {
          "name": "Account_userId_fkey",
          "tableFrom": "Account",
          "tableTo": "User",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "rawUserMetaData": {
          "name": "rawUserMetaData",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.Block": {
      "name": "Block",
      "schema": "",
      "columns": {
        "blockerId": {
          "name": "blockerId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "blockingId": {
          "name": "blockingId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Block_blockerId_idx": {
          "name": "Block_blockerId_idx",
          "columns": [
            {
              "expression": "blockerId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Block_blockingId_idx": {
          "name": "Block_blockingId_idx",
          "columns": [
            {
              "expression": "blockingId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Block_blockerId_fkey": {
          "name": "Block_blockerId_fkey",
          "tableFrom": "Block",
          "tableTo": "User",
          "columnsFrom": [
            "blockerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "Block_blockingId_fkey": {
          "name": "Block_blockingId_fkey",
          "tableFrom": "Block",
          "tableTo": "User",
          "columnsFrom": [
            "blockingId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "Block_pkey": {
          "name": "Block_pkey",
          "columns": [
            "blockerId",
            "blockingId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.EnrolledEvent": {
      "name": "EnrolledEvent",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "start": {
          "name": "start",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "end": {
          "name": "end",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "EnrolledEvent_userId_idx": {
          "name": "EnrolledEvent_userId_idx",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "EnrolledEvent_userId_fkey": {
          "name": "EnrolledEvent_userId_fkey",
          "tableFrom": "EnrolledEvent",
          "tableTo": "User",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.Flag": {
      "name": "Flag",
      "schema": "",
      "columns": {
        "comment": {
          "name": "comment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "resolved": {
          "name": "resolved",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "postId": {
          "name": "postId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Flag_postId_idx": {
          "name": "Flag_postId_idx",
          "columns": [
            {
              "expression": "postId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Flag_postId_userId_idx": {
          "name": "Flag_postId_userId_idx",
          "columns": [
            {
              "expression": "postId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Flag_userId_idx": {
          "name": "Flag_userId_idx",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Flag_postId_fkey": {
          "name": "Flag_postId_fkey",
          "tableFrom": "Flag",
          "tableTo": "Post",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "Flag_userId_fkey": {
          "name": "Flag_userId_fkey",
          "tableFrom": "Flag",
          "tableTo": "User",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "Flag_pkey": {
          "name": "Flag_pkey",
          "columns": [
            "postId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.Like": {
      "name": "Like",
      "schema": "",
      "columns": {
        "postId": {
          "name": "postId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Like_postId_idx": {
          "name": "Like_postId_idx",
          "columns": [
            {
              "expression": "postId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Like_postId_userId_idx": {
          "name": "Like_postId_userId_idx",
          "columns": [
            {
              "expression": "postId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Like_userId_idx": {
          "name": "Like_userId_idx",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Like_postId_fkey": {
          "name": "Like_postId_fkey",
          "tableFrom": "Like",
          "tableTo": "Post",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "Like_userId_fkey": {
          "name": "Like_userId_fkey",
          "tableFrom": "Like",
          "tableTo": "User",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "Like_pkey": {
          "name": "Like_pkey",
          "columns": [
            "postId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.Post": {
      "name": "Post",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdBy": {
          "name": "createdBy",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "baseLikeCount": {
          "name": "baseLikeCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "parentId": {
          "name": "parentId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Post_createdAt_idx": {
          "name": "Post_createdAt_idx",
          "columns": [
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_id_userId_idx": {
          "name": "Post_id_userId_idx",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_parentId_idx": {
          "name": "Post_parentId_idx",
          "columns": [
            {
              "expression": "parentId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_userId_idx": {
          "name": "Post_userId_idx",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Post_parentId_fkey": {
          "name": "Post_parentId_fkey",
          "tableFrom": "Post",
          "tableTo": "Post",
          "columnsFrom": [
            "parentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "Post_userId_fkey": {
          "name": "Post_userId_fkey",
          "tableFrom": "Post",
          "tableTo": "User",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.Prompt": {
      "name": "Prompt",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.Token": {
      "name": "Token",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "TokenType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "sentTo": {
          "name": "sentTo",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "usedAt": {
          "name": "usedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Token_token_type_key": {
          "name": "Token_token_type_key",
          "columns": [
            {
              "expression": "token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Token_userId_idx": {
          "name": "Token_userId_idx",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Token_userId_fkey": {
          "name": "Token_userId_fkey",
          "tableFrom": "Token",
          "tableTo": "User",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.User": {
      "name": "User",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "passwordHash": {
          "name": "passwordHash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "displayName": {
          "name": "displayName",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "displayImage": {
          "name": "displayImage",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "disabled": {
          "name": "disabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "weeklyDigestEmail": {
          "name": "weeklyDigestEmail",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "role": {
          "name": "role",
          "type": "UserRole",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'USER'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "User_email_key": {
          "name": "User_email_key",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.TokenType": {
      "name": "TokenType",
      "schema": "public",
      "values": [
        "REFRESH_TOKEN",
        "VERIFY_EMAIL",
        "RESET_PASSWORD"
      ]
    },
    "public.UserRole": {
      "name": "UserRole",
      "schema": "public",
      "values": [
        "USER",
        "ADMIN"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.Feed": {
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        },
        "parentId": {
          "name": "parentId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdBy": {
          "name": "createdBy",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "likeCount": {
          "name": "likeCount",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "commentCount": {
          "name": "commentCount",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        }
      },
      "definition": "WITH flagged_posts AS ( SELECT \"Flag\".\"postId\" FROM \"Flag\" GROUP BY \"Flag\".\"postId\" HAVING count(*) > 3 ) SELECT p.id, p.content, p.\"userId\", p.\"createdAt\", p.\"parentId\", p.\"createdBy\", COALESCE(p.\"baseLikeCount\", 0) + COALESCE(l.like_count, 0::bigint) AS \"likeCount\", COALESCE(c.comment_count, 0::bigint) AS \"commentCount\" FROM \"Post\" p LEFT JOIN ( SELECT \"Like\".\"postId\", count(*) AS like_count FROM \"Like\" GROUP BY \"Like\".\"postId\") l ON p.id = l.\"postId\" LEFT JOIN ( SELECT \"Post\".\"parentId\", count(*) AS comment_count FROM \"Post\" GROUP BY \"Post\".\"parentId\") c ON p.id = c.\"parentId\" WHERE NOT (p.id IN ( SELECT flagged_posts.\"postId\" FROM flagged_posts)) AND p.\"createdAt\" >= (CURRENT_DATE - '21 days'::interval) ORDER BY p.\"createdAt\" DESC",
      "name": "Feed",
      "schema": "public",
      "isExisting": false,
      "with": {
        "securityInvoker": true
      },
      "materialized": false
    },
    "public.UserStats": {
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "displayName": {
          "name": "displayName",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "totalPostCount": {
          "name": "totalPostCount",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "totalLikeCount": {
          "name": "totalLikeCount",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "longestPostStreak": {
          "name": "longestPostStreak",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "currentPostStreak": {
          "name": "currentPostStreak",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        }
      },
      "definition": "WITH daily_posts AS ( SELECT \"Post\".\"userId\", date(\"Post\".\"createdAt\") AS post_date FROM \"Post\" GROUP BY \"Post\".\"userId\", (date(\"Post\".\"createdAt\")) ), streaks AS ( SELECT daily_posts.\"userId\", daily_posts.post_date, daily_posts.post_date - row_number() OVER (PARTITION BY daily_posts.\"userId\" ORDER BY daily_posts.post_date)::integer AS streak_group FROM daily_posts ), streak_lengths AS ( SELECT streaks.\"userId\", streaks.streak_group, count(*) AS streak_length, max(streaks.post_date) AS streak_end FROM streaks GROUP BY streaks.\"userId\", streaks.streak_group ), post_likes AS ( SELECT p.id AS \"postId\", p.\"userId\", COALESCE(p.\"baseLikeCount\", 0) + count(l.\"userId\") AS total_likes FROM \"Post\" p LEFT JOIN \"Like\" l ON p.id = l.\"postId\" GROUP BY p.id, p.\"userId\", p.\"baseLikeCount\" ) SELECT u.id AS \"userId\", u.\"displayName\", COALESCE(post_count.total_posts, 0::bigint) AS \"totalPostCount\", COALESCE(like_count.total_likes, 0::numeric) AS \"totalLikeCount\", COALESCE(max(sl.streak_length), 0::bigint) AS \"longestPostStreak\", COALESCE(( SELECT sl2.streak_length FROM streak_lengths sl2 WHERE sl2.\"userId\" = u.id AND sl2.streak_end = (( SELECT max(sl3.streak_end) AS max FROM streak_lengths sl3 WHERE sl3.\"userId\" = u.id))), 0::bigint) AS \"currentPostStreak\" FROM \"User\" u LEFT JOIN ( SELECT \"Post\".\"userId\", count(*) AS total_posts FROM \"Post\" GROUP BY \"Post\".\"userId\") post_count ON u.id = post_count.\"userId\" LEFT JOIN ( SELECT post_likes.\"userId\", sum(post_likes.total_likes) AS total_likes FROM post_likes GROUP BY post_likes.\"userId\") like_count ON u.id = like_count.\"userId\" LEFT JOIN streak_lengths sl ON u.id = sl.\"userId\" GROUP BY u.id, u.\"displayName\", post_count.total_posts, like_count.total_likes",
      "name": "UserStats",
      "schema": "public",
      "isExisting": false,
      "with": {
        "securityInvoker": true
      },
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}