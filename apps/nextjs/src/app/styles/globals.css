@import "tailwindcss" source("../../../../../");
@import "./animations.css";

@plugin "@tailwindcss/typography";

:root {
  --background: hsl(45 60% 96%);
  --foreground: hsl(60 6% 13%);
  --card: hsl(34 10% 98%);
  --card-foreground: hsl(60 6% 13%);
  --popover: hsl(34 10% 98%);
  --popover-foreground: hsl(60 6% 13%);
  --primary: hsl(60 6% 13%);
  --primary-foreground: hsl(34 10% 98%);
  --secondary: hsl(47 27% 87%);
  --secondary-foreground: hsl(60 6% 13%);
  --muted: hsl(47 27% 87%);
  --muted-foreground: hsl(60 6% 60%);
  --accent: hsl(47 27% 87%);
  --accent-foreground: hsl(60 6% 13%);
  --destructive: hsl(358 72% 59%);
  --destructive-foreground: hsl(34 10% 98%);
  --border: hsl(60 6% 85%);
  --ring: hsl(60 6% 13%);
  --radius: 8px;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);

  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);

  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);

  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);

  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);

  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);

  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);

  --color-border: var(--border);
  --color-ring: var(--ring);

  --radius-radius: var(--radius);
}

@custom-variant dark (&:where(.dark, .dark *));

.dark {
  --background: hsl(60 6% 5%);
  --foreground: hsl(0 0% 98%);
  --card: hsl(0 0% 10%);
  --card-foreground: hsl(0 0% 98%);
  --popover: hsl(0 0% 10%);
  --popover-foreground: hsl(0 0% 98%);
  --primary: hsl(0 0% 98%);
  --primary-foreground: hsl(0 0% 10%);
  --secondary: hsl(60 6% 17%);
  --secondary-foreground: hsl(0 0% 98%);
  --muted: hsl(60 6% 17%);
  --muted-foreground: hsl(60 6% 50%);
  --accent: hsl(60 6% 17%);
  --accent-foreground: hsl(0 0% 98%);
  --destructive: hsl(0 62.8% 30.6%);
  --destructive-foreground: hsl(0 0% 98%);
  --border: hsl(60 6% 17%);
  --ring: hsl(0 0% 98%);
}

body {
  padding-bottom: env(safe-area-inset-bottom);
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}

.page-layout {
  --header-height: calc(env(safe-area-inset-top) + 50px);
  --left-column-width: 200px;
  --right-column-width: 300px;

  display: grid;
  grid-template-areas:
    "content-header aside-header"
    "content content";
  grid-template-columns: auto;
  grid-template-rows: var(--header-height) auto;
  margin: 0 auto;
  min-height: 100dvh;
  padding: 0 20px;
  max-width: 48rem;
}

@media (max-width: 640px) {
  .page-layout:has(.card-stack) {
    max-height: 100dvh;
    max-width: 100dvh;
    overflow: hidden;
  }
}

.area-nav-header {
  grid-area: nav-header;
  position: sticky;
  top: 0;
  align-items: center;
  border-bottom: 1px solid var(--border);
  display: none;
}

.area-nav {
  grid-area: nav;
  position: fixed;
  bottom: -1px;
  left: 0;
  right: 0;
  width: 100%;
  display: flex;
  z-index: 1;
}

.area-nav::after {
  --size: 30px;

  content: "";
  position: absolute;
  top: calc(-1 * var(--size));
  left: 0;
  right: 0;
  height: var(--size);
  background: linear-gradient(transparent, var(--background));
  pointer-events: none;
}

.area-content-header {
  grid-area: content-header;
  position: sticky;
  top: 0;
  background-color: var(--background);
  z-index: 10;
  display: flex;
  align-items: center;
  gap: 8px;
  justify-content: space-between;
  border-bottom: 1px solid var(--border);
  padding-top: env(safe-area-inset-top);
}

.area-content {
  grid-area: content;
  padding: 20px 0 64px;
}

.area-aside-header {
  grid-area: aside-header;
  position: sticky;
  top: 0;
  background-color: var(--background);
  display: flex;
  align-items: center;
  justify-content: end;
  gap: 4px;
  border-bottom: 1px solid var(--border);
  padding-top: env(safe-area-inset-top);
}

.area-aside {
  grid-area: aside;
  position: sticky;
  top: var(--header-height);
  align-self: start;
  height: calc(100dvh - var(--header-height));
  display: none;
}

@media (min-width: 768px) {
  .page-layout {
    --header-height: 80px;

    grid-template-areas:
      "nav-header content-header aside-header"
      "nav content content";
    grid-template-columns: var(--left-column-width) auto;
  }

  .area-nav-header,
  .area-nav {
    display: flex;
    margin-right: 2rem;
  }

  .area-nav {
    position: sticky;
    top: var(--header-height);
    align-self: start;
    flex-direction: column;
    height: calc(100dvh - var(--header-height));
    border: none;
    width: auto;
  }

  .area-content {
    padding: 20px 0;
  }
}

@media (min-width: 1096px) {
  .page-layout {
    grid-template-areas:
      "nav-header content-header aside-header"
      "nav content aside";
    grid-template-columns: var(--left-column-width) auto var(
        --right-column-width
      );
    column-gap: 4rem;
    max-width: 1280px;
  }

  .area-aside {
    display: flex;
  }
}

.textarea-grow {
  display: grid;
}

.textarea-grow::after {
  content: attr(data-textarea-value) " ";
  white-space: pre-wrap;
  visibility: hidden;
}

.textarea-grow > textarea {
  resize: none;
  overflow: hidden;
}

.textarea-grow > textarea,
.textarea-grow::after {
  grid-area: 1 / 1 / 2 / 2;
  background: transparent;
  outline: 2px solid transparent;
  outline-offset: 2px;
  min-height: 120px;
}

input::placeholder,
textarea::placeholder {
  color: var(--muted-foreground);
}

/* Knock overrides */
.rnf-notification-feed {
  background-color: var(--background);
}

.rnf-notification-feed__type {
  display: none;
}

.rnf-dropdown select {
  text-align: left;
}

.rnf-notification-feed__knock-branding {
  display: none;
}

.rnf-notification-cell {
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  border-radius: var(--radius);
}

:root {
  --rnf-notification-cell-active-bg-color: var(--accent);
  --rnf-notification-cell-unread-dot-bg-color: var(--destructive);
  --rnf-notification-cell-unread-dot-border-color: var(--destructive);
}
